// GRPC definition for the communication between the aggregator and the executors.
// After modifying this file, run
// $ python -m grpc_tools.protoc -I../communication/ --python_out=.. --grpc_python_out=.. job_api.proto
// No! should be $ python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. job_api.proto
syntax = "proto3";

package fedscale;

service JobService {
    // these are for the aggregators
    rpc CLIENT_REGISTER (RegisterRequest) returns (ServerResponse) {}
    rpc CLIENT_PING (PingRequest) returns (ServerResponse) {}
    rpc CLIENT_EXECUTE_COMPLETION (CompleteRequest) returns (ServerResponse) {}
    rpc SCHEDULER_WEIGHT_UPDATE (SchedulerWeightRequest) returns (ServerResponse) {}
    rpc SCHEDULER_PING (SchedulerPingRequest) returns (ServerResponse) {}
    // these are for the scheduler
    rpc AGGREGATOR_REGISTER (AggregatorRegisterRequest) returns (ServerResponse) {}
    rpc AGGREGATOR_ADJUST (AggregatorAdjustRequest) returns (ServerResponse) {}
    rpc AGGREGATOR_WEIGHT_STREAM (AggregatorWeightRequest) returns (ServerResponse) {}
    rpc AGGREGATOR_WEIGHT_FINISH (AggregatorFinishRequest) returns (ServerResponse) {}
}

message ServerResponse {
    string event = 1;
    bytes meta = 2;
    bytes data = 3;
}

message RegisterRequest {
    string client_id = 1;
    string executor_id = 2;
    bytes executor_info = 3;
}

message PingRequest {
    string client_id = 1;
    string executor_id = 2;
}

message CompleteRequest {
    string client_id = 1;
    string executor_id = 2;
    string event = 3;
    bool status = 4;
    string msg = 5;
    string meta_result = 6;
    bytes data_result = 7;
}

message SchedulerWeightRequest {
    string aggregator_id = 1;
    bytes data = 2;
}

message SchedulerPingRequest {
    string aggregator_id = 1;
}

message AggregatorRegisterRequest {
    string aggregator_ip = 1;
    string aggregator_port = 2;
    bytes aggregator_info = 3;
}

message AggregatorAdjustRequest {
    string aggregator_id = 1;
    string capacity = 2;
    bytes info = 3;
}

message AggregatorWeightRequest {
    string aggregator_id = 1;
    bytes data = 2;
}

message AggregatorFinishRequest {
    string aggregator_id = 1;
    bytes data = 2;
}